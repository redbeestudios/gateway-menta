spring.application.name: api-reversals

spring:
  cloud:
    config:
      import-check:
        enabled: false
  kafka:
    bootstrap-servers: ${KAFKA_SERVERS}
    listener:
      ack-mode: "manual_immediate"
      missing-topics-fatal: false
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      enable-auto-commit: false
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

  jackson:
    date-format: "yyyy-MM-dd'T'HH:mm:ss.SSSZ"
    property-naming-strategy: SNAKE_CASE
    default-property-inclusion: NON_NULL

  datasource:
    url: jdbc:mariadb://${MYSQL_HOST}:3306/${MYSQL_DB}
    username: ${MYSQL_USER}
    password: ${MYSQL_PASS}
    driver-class-name: org.mariadb.jdbc.Driver
    initialization-mode: always
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MariaDBDialect
        jdbc:
          time_zone: UTC
    hibernate:
      ddl-auto: none
  liquibase:
    change-log: classpath:db/liquibase-changelog.yml
    enabled: true

springdoc:
  api-docs:
    path: ${APP_PATH}/swagger-ui/api-docs
  swagger-ui:
    path: ${APP_PATH}/index.html

logging:
  level:
    org:
      springframework:
        web:
          filter:
            CommonsRequestLoggingFilter: DEBUG

externals:
  host: "api-internal.dev.apps.menta.global"
  scheme: "https://"
  entities:
    acquirer:
      request-timeout: 25500
      annulments:
        path: "/acquirers/reversals/annulments"
        url: "${externals.scheme}${externals.host}${externals.entities.acquirer.annulments.path}"
      refunds:
        path: "/acquirers/reversals/refunds"
        url: "${externals.scheme}${externals.host}${externals.entities.acquirer.refunds.path}"
      payments:
        path: "/acquirers/reversals/payments"
        url: "${externals.scheme}${externals.host}${externals.entities.acquirer.payments.path}"
    customers:
      path: "/customers/{customerId}"
      url: "${externals.scheme}${externals.host}${externals.entities.customers.path}"
      request-timeout: 3000
    terminals:
      path: "/terminals/{terminalId}"
      url: "${externals.scheme}${externals.host}${externals.entities.terminals.path}"
      request-timeout: 3000
    merchants:
      path: "/merchants/{merchantId}"
      url: "${externals.scheme}${externals.host}${externals.entities.merchants.path}"
      request-timeout: 3000

event:
  topic:
    received:
      payment.reversal: received.payment.reversal
      refund.reversal: received.refund.reversal
      annulment.reversal: received.annulment.reversal
    created:
      payment.reversal: created.payment.reversal
      refund.reversal: created.refund.reversal
      annulment.reversal: created.annulment.reversal
  group:
    authorize:
      payment.reversal: authorize.payment.reversal
      refund.reversal: authorize.refund.reversal
      annulment.reversal: authorize.annulment.reversal
    persist:
      payment.reversal: persist.payment.reversal
      refund.reversal: persist.refund.reversal
      annulment.reversal: persist.annulment.reversal

management:
  health:
    db:
      enabled: false

libs:
  security:
    resource-server:
      issuers:
        - name: "merchant"
          uri: "https://cognito-idp.${AWS_REGION}.amazonaws.com/${COGNITO_AWS_MERCHANT_POOL}"
          authorities-claim-key: "cognito:groups"
        - name: "customers"
          uri: "https://cognito-idp.${AWS_REGION}.amazonaws.com/${COGNITO_AWS_CUSTOMER_POOL}"
          authorities-claim-key: "cognito:groups"

elastic:
  apm:
    enabled: true
    server-url: ${ELASTIC_CLOUD_URL}
    service-name: ${ELASTIC_CLOUD_TAG_APP}
    secret-token: ${ELASTIC_CLOUD_TOKEN}
    environment: ${ELASTIC_CLOUD_TAG_ENV}
    application-packages: com.kiwi.api.reversal
    log-level: ERROR