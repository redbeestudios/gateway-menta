spring:
  application:
    name: api-users
  kafka:
    bootstrap-servers: ${KAFKA_SERVERS}
    listener:
      ack-mode: "manual_immediate"
      missing-topics-fatal: false
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
  cloud:
    config:
      import-check:
        enabled: false
  jackson:
    date-format: "yyyy-MM-dd'T'HH:mm:ss.SSSZ"
    property-naming-strategy: SNAKE_CASE
    default-property-inclusion: NON_NULL
    deserialization:
      ADJUST_DATES_TO_CONTEXT_TIME_ZONE: false
springdoc:
  api-docs:
    path: ${APP_PATH}/swagger-ui/api-docs
  swagger-ui:
    path: ${APP_PATH}/index.html

cognito:
  provider:
#    credentials:
#      secret: "${COGNITO_AWS_SECRET}"
#      accessKey: "${COGNITO_AWS_ACCESS_KEY}"
    region: "${AWS_REGION}"
    user-pools:
      MERCHANT:
        code: "${COGNITO_AWS_MERCHANT_POOL}"
        client-id: "${COGNITO_AWS_MERCHANT_CLIENT_ID}"
      CUSTOMER:
        code: "${COGNITO_AWS_CUSTOMER_POOL}"
        client-id: "${COGNITO_AWS_CUSTOMER_CLIENT_ID}"
      SUPPORT:
        code: "${COGNITO_AWS_SUPPORT_POOL}"
        client-id: "${COGNITO_AWS_SUPPORT_CLIENT_ID}"

libs:
  security:
    ignore-paths: ["/actuator/**", "/private/**", "/public/**"]
    resource-server:
      issuers:
        - name: "merchant"
          uri: "https://cognito-idp.${AWS_REGION}.amazonaws.com/${COGNITO_AWS_MERCHANT_POOL}"
          authorities-claim-key: "cognito:groups"
        - name: "customer"
          uri: "https://cognito-idp.${AWS_REGION}.amazonaws.com/${COGNITO_AWS_CUSTOMER_POOL}"
          authorities-claim-key: "cognito:groups"
        - name: "support"
          uri: "https://cognito-idp.${AWS_REGION}.amazonaws.com/${COGNITO_AWS_SUPPORT_POOL}"
          authorities-claim-key: "cognito:groups"
    requester-user:
      provider:
        enabled: true
    ownership:
      enabled: false

event:
  topic:
    user:
      created: created.user

elastic:
  apm:
    enabled: true
    server-url: ${ELASTIC_CLOUD_URL}
    service-name: ${ELASTIC_CLOUD_TAG_APP}
    secret-token: ${ELASTIC_CLOUD_TOKEN}
    environment: ${ELASTIC_CLOUD_TAG_ENV}
    application-packages: com.menta.api.users
    log-level: ERROR
