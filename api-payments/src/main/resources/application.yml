spring:
  application:
    name: api-payments

  kafka:
    bootstrap-servers: ${KAFKA_SERVERS}
    listener:
      ack-mode: "manual_immediate"
      missing-topics-fatal: false
    consumer:
      enable-auto-commit: false
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
  cloud:
    config:
      import-check:
        enabled: false

  jackson:
    date-format: "yyyy-MM-dd'T'HH:mm:ss.SSSZ"
    property-naming-strategy: SNAKE_CASE
    default-property-inclusion: NON_NULL
    deserialization:
      ADJUST_DATES_TO_CONTEXT_TIME_ZONE: false

  datasource:
    url: jdbc:mariadb://${MYSQL_HOST}:3306/${MYSQL_DB}
    username: ${MYSQL_USER}
    password: ${MYSQL_PASS}
    driver-class-name: org.mariadb.jdbc.Driver
    initialization-mode: always
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MariaDBDialect
        jdbc:
          time_zone: UTC
    hibernate:
      ddl-auto: none
  liquibase:
    change-log: classpath:db/liquibase-changelog.yml
    enabled: true

springdoc:
  api-docs:
    path: ${APP_PATH}/swagger-ui/api-docs
  swagger-ui:
    path: ${APP_PATH}/index.html

externals:
  host: "api-internal.dev.apps.menta.global"
  scheme: "https://"
  entities:
    acquirer:
      payments:
        url: "${externals.scheme}${externals.host}${externals.entities.acquirer.payments.path}"
        request-timeout: 25500
        path: "/acquirers/payments"
    customers:
      url: "${externals.scheme}${externals.host}${externals.entities.customers.path}"
      request-timeout: 3000
      path: "/customers/{customerId}"
    terminals:
      url: "${externals.scheme}${externals.host}${externals.entities.terminals.path}"
      request-timeout: 3000
      path: "/terminals/{terminalId}"
    merchants:
      url: "${externals.scheme}${externals.host}${externals.entities.merchants.path}"
      request-timeout: 3000
      path: "/merchants/{merchantId}"

event:
  topic:
    payment:
      created: created.payment
      reverse: received.payment.reversal
    reversal:
      created: created.reversal
  group:
    persist:
      payment: persist.payment
    update:
      reversal: update.payment.reversal
    authorize:
      reversal: authorize.operation.reversal

management:
  health:
    db:
      enabled: false

libs:
  security:
    resource-server:
      issuers:
        - name: "merchant"
          uri: "https://cognito-idp.${AWS_REGION}.amazonaws.com/${COGNITO_AWS_MERCHANT_POOL}"
          authorities-claim-key: "cognito:groups"
        - name: "customers"
          uri: "https://cognito-idp.${AWS_REGION}.amazonaws.com/${COGNITO_AWS_CUSTOMER_POOL}"
          authorities-claim-key: "cognito:groups"

elastic:
  apm:
    enabled: true
    server-url: ${ELASTIC_CLOUD_URL}
    service-name: ${ELASTIC_CLOUD_TAG_APP}
    secret-token: ${ELASTIC_CLOUD_TOKEN}
    environment: ${ELASTIC_CLOUD_TAG_ENV}
    application-packages: com.kiwi.api.payments
    log-level: ERROR